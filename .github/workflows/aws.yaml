name: Deploy Application Docker Image to EC2 instance

on:
  push:
    branches: [main]

jobs:
  Continuous-Integration:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ENV_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ENV_KEY }}
          aws-region: ${{ secrets.AWS_REGION_NAME }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPO }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .  
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

  Continuous-Deployment:
    needs: Continuous-Integration
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ENV_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ENV_KEY }}
          aws-region: ${{ secrets.AWS_REGION_NAME }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Deploy with Docker Compose
        run: |
          docker pull "${{ steps.login-ecr.outputs.registry }}"/"${{ secrets.ECR_REPO }}":latest
          docker compose down  # Stop any running containers
          docker compose up -d  # Start using docker-compose.yml

      # - name: Run Docker Image to serve users
      #   run: |
      #     docker run -d -e AWS_ACCESS_KEY_ID_ENV_KEY="${{ secrets.AWS_ACCESS_KEY_ID_ENV_KEY }}" -e AWS_SECRET_ACCESS_KEY_ENV_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY_ENV_KEY }}" -e AWS_REGION_NAME="${{ secrets.AWS_REGION_NAME }}" -e MONGO_DB_URL_KEY="${{ secrets.MONGO_DB_URL_KEY }}" -e MONGO_DB_NAME="${{ secrets.MONGO_DB_NAME }}" -e MONGO_DB_COLLECTION="${{ secrets.MONGO_DB_COLLECTION }}" -e APP_HOST="${{ secrets.APP_HOST }}" -e APP_PORT="${{ secrets.APP_PORT }}" -p 4060:4060 "${{ steps.login-ecr.outputs.registry }}"/"${{ secrets.ECR_REPO }}":latest
